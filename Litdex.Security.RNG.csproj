<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net5.0</TargetFrameworks>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Authors>Shiroechi</Authors>
    <Company>Litdex</Company>
    <Description>Library that provide basic random generator function.</Description>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/Shiroechi/Litdex.Security.RNG</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Shiroechi/Litdex.Security.RNG</RepositoryUrl>
    <PackageTags>Random RNG PRNG Splitmix Xoroshiro GJrand JSF PCG MSWS Squares Tyche Tychei Romu</PackageTags>
    <NeutralLanguage>English</NeutralLanguage>
    <Version>2.6.0</Version>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <RootNamespace>Litdex</RootNamespace>
    <PackageReleaseNotes>- Rename PCG32
- Add new variant of PCG
- Fix xml docs
- Fix some error
- Add endianess switch based on system for byte array, previous version using little endian only.
- Add new rng algo, SFC and Shishua</PackageReleaseNotes>
    <Copyright>Shiroechi</Copyright>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <EnableNETAnalyzers>false</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <FileVersion>2.6.0.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>D:\Project\C#\Litdex\Litdex.Security.RNG\Litdex.Security.RNG.xml</DocumentationFile>
    <DebugType>none</DebugType>
    <DebugSymbols>false</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <Optimize>true</Optimize>
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
